name: Build & Deploy Tagged Docker Image

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # https://github.com/marketplace/actions/get-current-git-tag
    - name: Get tag
      id: tag
      uses: devops-actions/action-get-tag@v1.0.3
      with:
        strip_v: true # Optional: Remove 'v' character from version
        default: v0.0.0 # Optional: Default version when tag not found

    - name: Use tag
      run: echo ${{steps.tag.outputs.tag}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # https://github.com/docker/login-action
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create .env file
      run: |
        cat <<EOF > .env
        VITE_TMDB_API_KEY=${{ secrets.KEY }}
        VITE_TMDB_BASE_URL=${{ vars.VITE_TMDB_BASE_URL }}
        VITE_TMDB_IMAGE_URL=${{ vars.VITE_TMDB_IMAGE_URL }}
        VITE_IMAGE_PLACEHOLDER=${{ vars.VITE_IMAGE_PLACEHOLDER }}
        EOF

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nusantech-movie-test:${{ steps.tag.outputs.tag }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/nusantech-movie-test:${{ steps.tag.outputs.tag }}

    # https://github.com/appleboy/ssh-action
    - name: Deploy via SSH to AWS Lightsail
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nusantech-movie-test:${{ steps.tag.outputs.tag }}
          sudo docker stop nusantech-movie-test || true
          sudo docker rm nusantech-movie-test || true
          sudo docker run -d --name nusantech-movie-test -p 3003:3000 ${{ secrets.DOCKER_USERNAME }}/nusantech-movie-test:${{ steps.tag.outputs.tag }}

    - name: Copy Nginx configuration
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "nginx/d.conf"
        target: "/home/ubuntu/app/"

    - name: Restart Nginx
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo mv /home/ubuntu/app/nginx/d.conf /etc/nginx/movie/d.conf
          sudo nginx -t && sudo systemctl reload nginx